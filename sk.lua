-- Tower Defense Auto GUI
-- –¢–µ–º–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å Auto Skip, Auto Start, Auto Replay

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏
local settings = {
    autoSkip = false,
    autoStart = false,
    autoReplay = false
}

local connections = {}
local gui = nil

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–Ω–µ–≥
local function getMoney()
    local success, money = pcall(function()
        return LocalPlayer.Money.Value
    end)
    return success and money or 0
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ UI –∏–≥—Ä—ã
local function getGameUI()
    local success, result = pcall(function()
        local gu = LocalPlayer.PlayerGui:FindFirstChild("GU")
        local mainUI = LocalPlayer.PlayerGui:FindFirstChild("MainUI")
        
        if not gu or not mainUI then return nil end
        
        local menuFrame = gu:FindFirstChild("MenuFrame")
        local topFrame = menuFrame and menuFrame:FindFirstChild("TopFrame")
        local resultFrame = mainUI:FindFirstChild("ResultFrame")
        
        if not topFrame then return nil end
        
        return {
            skipButton = topFrame:FindFirstChild("Skip"),
            startButton = topFrame:FindFirstChild("Start"),
            resultFrame = resultFrame
        }
    end)
    
    return success and result or nil
end

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ø–∞–º–∞
local lastActions = {
    skip = 0,
    start = 0,
    replay = 0
}

-- –§—É–Ω–∫—Ü–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
local function sendSkip()
    local currentTime = tick()
    if currentTime - lastActions.skip < 2 then return end -- –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞
    
    local success = pcall(function()
        local remotes = game.ReplicatedStorage:FindFirstChild("Remotes")
        local gameStuff = remotes and remotes:FindFirstChild("GameStuff")
        
        if not gameStuff then
            warn("‚ùå GameStuff remote –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        end
        
        local args = {"SkipVoteYes"}
        gameStuff:FireServer(unpack(args))
        lastActions.skip = currentTime
    end)
    
    if success then
        print("‚è© –°–∫–∏–ø –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    else
        warn("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∫–∏–ø–∞")
    end
end

local function sendStart()
    local currentTime = tick()
    if currentTime - lastActions.start < 2 then return end -- –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞
    
    local success = pcall(function()
        local remotes = game.ReplicatedStorage:FindFirstChild("Remotes")
        local gameStuff = remotes and remotes:FindFirstChild("GameStuff")
        
        if not gameStuff then
            warn("‚ùå GameStuff remote –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        end
        
        local args = {"StartVoteYes"}
        gameStuff:FireServer(unpack(args))
        lastActions.start = currentTime
    end)
    
    if success then
        print("‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    else
        warn("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ä—Ç–∞")
    end
end

local function sendReplay()
    local currentTime = tick()
    if currentTime - lastActions.replay < 5 then return end -- –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞
    
    local success = pcall(function()
        local remotes = game.ReplicatedStorage:FindFirstChild("Remotes")
        local getFunction = remotes and remotes:FindFirstChild("GetFunction")
        
        if not getFunction then
            warn("‚ùå GetFunction remote –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        end
        
        -- –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å - Replay
        local args1 = {
            {
                Type = "Game",
                Index = "Replay",
                Mode = "Reward"
            }
        }
        getFunction:InvokeServer(unpack(args1))
        
        -- –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å - Map (—á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É)
        wait(0.5)
        local args2 = {
            {
                Type = "Map",
                Mode = "Get"
            }
        }
        getFunction:InvokeServer(unpack(args2))
        
        lastActions.replay = currentTime
    end)
    
    if success then
        print("üîÑ Replay –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    else
        warn("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ replay")
    end
end

-- –°–æ–∑–¥–∞–Ω–∏–µ GUI
local function createGUI()
    -- –û—Å–Ω–æ–≤–Ω–æ–π ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "TowerDefenseAuto"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = PlayerGui
    
    -- –ì–ª–∞–≤–Ω—ã–π —Ñ—Ä–µ–π–º
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 250, 0, 200)
    mainFrame.Position = UDim2.new(0, 50, 0, 50)
    mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    -- –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = mainFrame
    
    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 8)
    titleCorner.Parent = titleBar
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, -60, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "üéØ Tower Defense Auto"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextScaled = true
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleBar
    
    -- –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 25, 0, 25)
    closeButton.Position = UDim2.new(1, -30, 0, 2.5)
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 85, 85)
    closeButton.BorderSizePixel = 0
    closeButton.Text = "‚úï"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.TextScaled = true
    closeButton.Font = Enum.Font.SourceSansBold
    closeButton.Parent = titleBar
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 4)
    closeCorner.Parent = closeButton
    
    -- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "Content"
    contentFrame.Size = UDim2.new(1, -20, 1, -40)
    contentFrame.Position = UDim2.new(0, 10, 0, 35)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Parent = mainFrame
    
    -- Layout –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    local layout = Instance.new("UIListLayout")
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, 5)
    layout.Parent = contentFrame
    
    -- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è Toggle
    local function createToggle(name, text, layoutOrder)
        local toggleFrame = Instance.new("Frame")
        toggleFrame.Name = name
        toggleFrame.Size = UDim2.new(1, 0, 0, 25)
        toggleFrame.BackgroundTransparency = 1
        toggleFrame.LayoutOrder = layoutOrder
        toggleFrame.Parent = contentFrame
        
        local toggleButton = Instance.new("TextButton")
        toggleButton.Name = "Toggle"
        toggleButton.Size = UDim2.new(0, 40, 1, 0)
        toggleButton.Position = UDim2.new(1, -40, 0, 0)
        toggleButton.BackgroundColor3 = Color3.fromRGB(255, 85, 85)
        toggleButton.BorderSizePixel = 0
        toggleButton.Text = "OFF"
        toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        toggleButton.TextScaled = true
        toggleButton.Font = Enum.Font.SourceSansBold
        toggleButton.Parent = toggleFrame
        
        local toggleCorner = Instance.new("UICorner")
        toggleCorner.CornerRadius = UDim.new(0, 4)
        toggleCorner.Parent = toggleButton
        
        local label = Instance.new("TextLabel")
        label.Name = "Label"
        label.Size = UDim2.new(1, -50, 1, 0)
        label.Position = UDim2.new(0, 0, 0, 0)
        label.BackgroundTransparency = 1
        label.Text = text
        label.TextColor3 = Color3.fromRGB(200, 200, 200)
        label.TextScaled = true
        label.Font = Enum.Font.SourceSans
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = toggleFrame
        
        return toggleButton
    end
    
    -- –°–æ–∑–¥–∞–Ω–∏–µ Toggle'–æ–≤
    local autoSkipToggle = createToggle("AutoSkip", "Auto Skip", 1)
    local autoStartToggle = createToggle("AutoStart", "Auto Start", 2)
    local autoReplayToggle = createToggle("AutoReplay", "Auto Replay", 3)
    
    -- –ö–Ω–æ–ø–∫–∞ Money
    local moneyButton = Instance.new("TextButton")
    moneyButton.Name = "MoneyButton"
    moneyButton.Size = UDim2.new(1, 0, 0, 30)
    moneyButton.BackgroundColor3 = Color3.fromRGB(85, 170, 255)
    moneyButton.BorderSizePixel = 0
    moneyButton.Text = "üí∞ Show Money"
    moneyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    moneyButton.TextScaled = true
    moneyButton.Font = Enum.Font.SourceSansBold
    moneyButton.LayoutOrder = 4
    moneyButton.Parent = contentFrame
    
    local moneyCorner = Instance.new("UICorner")
    moneyCorner.CornerRadius = UDim.new(0, 6)
    moneyCorner.Parent = moneyButton
    
    -- –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è Toggle
    local function setupToggle(toggleButton, settingName)
        toggleButton.Activated:Connect(function()
            settings[settingName] = not settings[settingName]
            
            if settings[settingName] then
                toggleButton.BackgroundColor3 = Color3.fromRGB(85, 255, 85)
                toggleButton.Text = "ON"
            else
                toggleButton.BackgroundColor3 = Color3.fromRGB(255, 85, 85)
                toggleButton.Text = "OFF"
            end
            
            print("üîß " .. settingName .. ": " .. (settings[settingName] and "–≤–∫–ª—é—á–µ–Ω–æ" or "–≤—ã–∫–ª—é—á–µ–Ω–æ"))
        end)
    end
    
    -- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Toggle'–æ–≤
    setupToggle(autoSkipToggle, "autoSkip")
    setupToggle(autoStartToggle, "autoStart")
    setupToggle(autoReplayToggle, "autoReplay")
    
    -- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ Money
    moneyButton.Activated:Connect(function()
        local money = getMoney()
        print("üí∞ –¢–µ–∫—É—â–∏–µ –¥–µ–Ω—å–≥–∏: " .. money)
    end)
    
    -- –ó–∞–∫—Ä—ã—Ç–∏–µ GUI
    closeButton.Activated:Connect(function()
        print("üî¥ –ó–∞–∫—Ä—ã—Ç–∏–µ Tower Defense Auto...")
        
        -- –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ Auto —Ñ—É–Ω–∫—Ü–∏–∏
        settings.autoSkip = false
        settings.autoStart = false
        settings.autoReplay = false
        
        -- –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        for i, connection in ipairs(connections) do
            if connection and connection.Connected then
                connection:Disconnect()
            end
        end
        connections = {}
        
        -- –£–¥–∞–ª—è–µ–º GUI –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
        if screenGui and screenGui.Parent then
            screenGui:Destroy()
        end
        gui = nil
        
        print("‚úÖ GUI –∑–∞–∫—Ä—ã—Ç, –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã")
    end)
    
    -- –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ GUI
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    return screenGui
end

-- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
local function startAutomation()
    local replayStartTime = 0
    local lastSkipVisible = false
    local lastStartVisible = false
    local lastResultVisible = false
    
    local connection = RunService.Heartbeat:Connect(function()
        if not gui then return end -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ—Å–ª–∏ GUI –∑–∞–∫—Ä—ã—Ç
        
        local gameUI = getGameUI()
        if not gameUI then return end
        
        -- Auto Skip - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
        if settings.autoSkip and gameUI.skipButton then
            local isVisible = gameUI.skipButton.Visible
            if isVisible and not lastSkipVisible then
                sendSkip()
            end
            lastSkipVisible = isVisible
        end
        
        -- Auto Start - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
        if settings.autoStart and gameUI.startButton then
            local isVisible = gameUI.startButton.Visible
            if isVisible and not lastStartVisible then
                sendStart()
            end
            lastStartVisible = isVisible
        end
        
        -- Auto Replay - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ + 5 —Å–µ–∫ –∑–∞–¥–µ—Ä–∂–∫–∞
        if settings.autoReplay and gameUI.resultFrame then
            local isVisible = gameUI.resultFrame.Visible
            
            if isVisible and not lastResultVisible then
                replayStartTime = tick()
                print("‚è±Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∫–∞–∑–∞–Ω, –∂–¥—É 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è Replay...")
            elseif isVisible and replayStartTime > 0 and tick() - replayStartTime >= 5 then
                sendReplay()
                replayStartTime = 0
            elseif not isVisible then
                replayStartTime = 0
            end
            
            lastResultVisible = isVisible
        end
    end)
    
    table.insert(connections, connection)
end

-- –ó–∞–ø—É—Å–∫
print("üöÄ –ó–∞–ø—É—Å–∫ Tower Defense Auto GUI...")
gui = createGUI()
startAutomation()
print("‚úÖ GUI —Å–æ–∑–¥–∞–Ω! –ò—Å–ø–æ–ª—å–∑—É–π Toggle'—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.")
